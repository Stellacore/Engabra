#LyX 2.2 created this file. For more info see http://www.lyx.org/
\lyxformat 508
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass paper
\begin_preamble
% For bibtex reference uses
\usepackage{url}

% For drawing
\usepackage{tikz}
\usepackage{tikz-3dplot}
\end_preamble
\use_default_options true
\begin_modules
eqs-within-sections
figs-within-sections
\end_modules
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize letterpaper
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 2
\tocdepth 2
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Engabra Demo - Rigid Body Attitude
\end_layout

\begin_layout SubTitle
Transforming Location Coordinates between Rotated Coordinate Frames
\end_layout

\begin_layout Author
Stellacore Corporation - Dave Knopp
\end_layout

\begin_layout Keywords
Rotation, Attitude, 3D Angles, Bivector Exponentiation, Angle Logarithms
\end_layout

\begin_layout Abstract
This example illustrates the use of Engabra to represent the angular attitude
 (aka pose, orientation) of a rigid body.
 It illustrates the interpretation of bivectors as 
\begin_inset Quotes eld
\end_inset

3D-angles
\begin_inset Quotes erd
\end_inset

 that fully specify body attitude in 3D space.
 The attitude representation is used to transform vector coordinate values
 between the body coordinate frame and the external reference frame.
\end_layout

\begin_layout Section
Associated Code
\end_layout

\begin_layout Standard
For demonstration code is contained in files:
\end_layout

\begin_layout Itemize
DemoRigidBodyAttitude.cpp
\end_layout

\begin_layout Section
Concept and Configuration
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 1
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status collapsed

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout

% Rotate the view-point of the main coordinate system e.g.
 {zenith-view}{azimuth-view)
\end_layout

\begin_layout Plain Layout


\backslash
tdplotsetmaincoords{75}{30}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

%%% 
\backslash
tdplotsetrotatedcoords{0}{20}{0}%
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

% orthogonal projection (w/ default x,y,z values)
\end_layout

\begin_layout Plain Layout


\backslash
begin{tikzpicture}
\end_layout

\begin_layout Plain Layout

	[ tdplot_main_coords
\end_layout

\begin_layout Plain Layout

	, block/.style={thick}
\end_layout

\begin_layout Plain Layout

	, axis/.style={->}
\end_layout

\begin_layout Plain Layout

	, body/.style={->, thick, black}
\end_layout

\begin_layout Plain Layout

	]
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

	
\backslash
draw[axis] (0,0,0) -- (4,0,0) node[anchor=west]{$e_1(x)$};
\end_layout

\begin_layout Plain Layout

	
\backslash
draw[axis, gray] (0,0,0) -- (0,4,0) node[anchor=west]{$e_2(y)$};
\end_layout

\begin_layout Plain Layout

	
\backslash
draw[axis] (0,0,0) -- (0,0,4) node[anchor=west]{$e_3(z)$};
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

	
\backslash
draw[body] (0,0,0) -- (1,0,0) node[anchor=west]{$e_{1}^{
\backslash
prime}$};
\end_layout

\begin_layout Plain Layout

	
\backslash
draw[body] (0,0,0) -- (0,1,0) node[anchor=west]{$e_{2}^{
\backslash
prime}$};
\end_layout

\begin_layout Plain Layout

	
\backslash
draw[body] (0,0,0) -- (0,0,1) node[anchor=west]{$e_{3}^{
\backslash
prime}$};
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

	%% - Bottom face
\end_layout

\begin_layout Plain Layout

	% 
\backslash
draw[block] (0,0,0) -- (3,0,0) -- (3,7,0) -- (0,7,0) -- cycle;
\end_layout

\begin_layout Plain Layout

	
\backslash
draw[block] (0,0,0) -- (3,0,0);
\end_layout

\begin_layout Plain Layout

	
\backslash
draw[block] (3,0,0) -- (3,7,0);
\end_layout

\begin_layout Plain Layout

	% 
\backslash
draw[block] (3,7,0) -- (0,7,0);
\end_layout

\begin_layout Plain Layout

	% 
\backslash
draw[block] (0,7,0) -- (0,0,0);
\end_layout

\begin_layout Plain Layout

	%% - Top Face
\end_layout

\begin_layout Plain Layout

	
\backslash
draw[block] (0,0,.5) -- (3,0,.5) -- (3,7,.5) -- (0,7,.5) -- cycle;
\end_layout

\begin_layout Plain Layout

	%% - Vertical Edges
\end_layout

\begin_layout Plain Layout

	
\backslash
draw[block] (0,0,0) -- (0,0,.5);
\end_layout

\begin_layout Plain Layout

	
\backslash
draw[block] (3,0,0) -- (3,0,.5);
\end_layout

\begin_layout Plain Layout

	
\backslash
draw[block] (3,7,0) -- (3,7,.5);
\end_layout

\begin_layout Plain Layout

	% 
\backslash
draw[block] (0,7,0) -- (0,7,.5);
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout


\backslash
end{tikzpicture}
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Body-at-starting"

\end_inset

Body at starting attitude aligned with reference system.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Rotation operations and attitude concepts are entirely abstract and independent
 of physical body size and shape.
 However, to provide a familiar interpretative reference, consider a rectangular
 rigid body with shape similar to a smart phone.
\end_layout

\begin_layout Standard
Figure
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Body-at-starting"

\end_inset

 illustrates the example rigid body in position aligned with the reference
 coordinate frame.
\end_layout

\begin_layout Standard
The body is associated with a Cartesian coordinate frame fixed to the body.
 In smart phone terminology, the 
\begin_inset Quotes eld
\end_inset

base
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset

left edge
\begin_inset Quotes erd
\end_inset

, and 
\begin_inset Quotes eld
\end_inset

face
\begin_inset Quotes erd
\end_inset

 may be associated with 
\begin_inset Quotes eld
\end_inset

x
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset

y
\begin_inset Quotes erd
\end_inset

 and 
\begin_inset Quotes eld
\end_inset

z
\begin_inset Quotes erd
\end_inset

 body axis.
 In the figure, the body axes are represented by primed symbols on the standard
 basis vector symbols, 
\begin_inset Formula $e_{k}^{\prime}$
\end_inset

.
\end_layout

\begin_layout Standard
This body frame is positioned (in attitude only for this demo) within a
 second Cartesian coordinate system that is interpreted as the reference
 frame.
 The reference frame is associated with a standard vector basis labeled
 with, 
\begin_inset Formula $e_{k}$
\end_inset

.
\end_layout

\begin_layout Standard
The demonstration concept and methodology is described in the following
 sections.
 Relevant geometric algebra (GA) expressions and operations are presented
 in appendix
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Associated-Geometric-Algebra"

\end_inset

.
\end_layout

\begin_layout Section
Approach
\end_layout

\begin_layout Standard
For this demo the main program performs the following operations.
\end_layout

\begin_layout Subsection
Establish Body Attitude
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 1
width "50col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status collapsed

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout

% Rotate the view-point of the main coordinate system e.g.
 {zenith-view}{azimuth-view)
\end_layout

\begin_layout Plain Layout


\backslash
tdplotsetmaincoords{75}{30}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout


\backslash
tdplotsetrotatedcoords{20}{30}{30}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

% orthogonal projection (w/ default x,y,z values)
\end_layout

\begin_layout Plain Layout


\backslash
begin{tikzpicture}
\end_layout

\begin_layout Plain Layout

	[ tdplot_main_coords
\end_layout

\begin_layout Plain Layout

	, block/.style={thick, tdplot_rotated_coords}
\end_layout

\begin_layout Plain Layout

	, axis/.style={->}
\end_layout

\begin_layout Plain Layout

	, body/.style={->, thick, black, tdplot_rotated_coords}
\end_layout

\begin_layout Plain Layout

	]
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

%	
\backslash
coordinate (Shift) at (1,0,1)
\end_layout

\begin_layout Plain Layout

%	
\backslash
tdplotsetrotatedcoordsorigin{(Shift)}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

	
\backslash
draw[axis] (0,0,0) -- (4,0,0) node[anchor=west]{$e_1(x)$};
\end_layout

\begin_layout Plain Layout

	
\backslash
draw[axis, gray] (0,0,0) -- (0,4,0) node[anchor=west]{$e_2(y)$};
\end_layout

\begin_layout Plain Layout

	
\backslash
draw[axis] (0,0,0) -- (0,0,4) node[anchor=west]{$e_3(z)$};
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

	
\backslash
draw[body] (0,0,0) -- (1,0,0) node[anchor=west]{$e_{1}^{
\backslash
prime}$};
\end_layout

\begin_layout Plain Layout

	
\backslash
draw[body] (0,0,0) -- (0,1,0) node[anchor=west]{$e_{2}^{
\backslash
prime}$};
\end_layout

\begin_layout Plain Layout

	
\backslash
draw[body] (0,0,0) -- (0,0,1) node[anchor=west]{$e_{3}^{
\backslash
prime}$};
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

	%% - Bottom face
\end_layout

\begin_layout Plain Layout

	% 
\backslash
draw[block] (0,0,0) -- (3,0,0) -- (3,7,0) -- (0,7,0) -- cycle;
\end_layout

\begin_layout Plain Layout

	
\backslash
draw[block] (0,0,0) -- (3,0,0);
\end_layout

\begin_layout Plain Layout

	% 
\backslash
draw[block] (3,0,0) -- (3,7,0);
\end_layout

\begin_layout Plain Layout

	%
\backslash
draw[block] (3,7,0) -- (0,7,0);
\end_layout

\begin_layout Plain Layout

	
\backslash
draw[block] (0,7,0) -- (0,0,0);
\end_layout

\begin_layout Plain Layout

	%% - Top Face
\end_layout

\begin_layout Plain Layout

	% 
\backslash
draw[block] (0,0,.5) -- (3,0,.5) -- (3,7,.5) -- (0,7,.5) -- cycle;
\end_layout

\begin_layout Plain Layout

	
\backslash
draw[block] (0,0,.5) -- (3,0,.5);
\end_layout

\begin_layout Plain Layout

	
\backslash
draw[block] (3,0,.5) -- (3,7,.5);
\end_layout

\begin_layout Plain Layout

	
\backslash
draw[block] (3,7,.5) -- (0,7,.5);
\end_layout

\begin_layout Plain Layout

	
\backslash
draw[block] (0,7,.5) -- (0,0,.5);
\end_layout

\begin_layout Plain Layout

	%% - Vertical Edges
\end_layout

\begin_layout Plain Layout

	
\backslash
draw[block] (0,0,0) -- (0,0,.5);
\end_layout

\begin_layout Plain Layout

	
\backslash
draw[block] (3,0,0) -- (3,0,.5);
\end_layout

\begin_layout Plain Layout

	% 
\backslash
draw[block] (3,7,0) -- (3,7,.5);
\end_layout

\begin_layout Plain Layout

	
\backslash
draw[block] (0,7,0) -- (0,7,.5);
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout


\backslash
end{tikzpicture}
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Body-in-attitude"

\end_inset

Body in attitude pose after a rotation.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
An arbitrary body attitude is established (with respect to reference frame)
 and the following operations are demonstrated.
\end_layout

\begin_layout Enumerate
\begin_inset CommandInset label
LatexCommand label
name "enu:Create-rotor-sequence"

\end_inset

Create a rotor from sequence of three independent turning motions
\end_layout

\begin_deeper
\begin_layout Enumerate
Demonstrates bivector angles, angle exponentiation to create rotors, and
 rotor multiplication.
\end_layout

\end_deeper
\begin_layout Enumerate
Extract the full 3D angle associated with the resultant attitude
\end_layout

\begin_deeper
\begin_layout Enumerate
Demonstrates logarithm use to recover attitude angles from rotor operators
\end_layout

\end_deeper
\begin_layout Enumerate
Create a rotor from the full 3D angle (and compare with that from
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "enu:Create-rotor-sequence"

\end_inset

)
\end_layout

\begin_layout Enumerate
Print these above data values
\end_layout

\begin_deeper
\begin_layout Enumerate
Demonstrates use of simple IO functions
\end_layout

\end_deeper
\begin_layout Standard
Figure
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Body-at-starting"

\end_inset

 illustrates the body in an initial starting position that is aligned with
 the reference frame.
 Figure
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Body-in-attitude"

\end_inset

 illustrates the body positioned at an arbitrary attitude after performing
 a physical rotation of the body relative to the reference frame.
\end_layout

\begin_layout Subsection
Transform Vector Expressions
\end_layout

\begin_layout Standard
When a rigid body is posed at an arbitrary attitude such as that described
 above, it is often desired to transform coordinate expressions between
 frames.
 The demonstration code illustrates both the forward case (compute body
 frame coordinate expressions for locations in the reference frame) and
 the reverse case (compute reference frame coordinates for locations expressed
 in the body frame).
\end_layout

\begin_layout Enumerate
Transform a collection of vector locations from reference frame into body
 frame expressions
\end_layout

\begin_deeper
\begin_layout Enumerate
Define a set of points
\end_layout

\begin_deeper
\begin_layout Enumerate
Demonstrates various vector construction operations and use in collection
 containers
\end_layout

\end_deeper
\begin_layout Enumerate
Transform vector expressions into body frame (from reference frame)
\end_layout

\begin_deeper
\begin_layout Enumerate
Demonstrates rotor multiplications
\end_layout

\end_deeper
\begin_layout Enumerate
Display the various results
\end_layout

\end_deeper
\begin_layout Enumerate
Transform various body point locations into reference frame expressions
\end_layout

\begin_deeper
\begin_layout Enumerate
Define interesting body corner locations
\end_layout

\begin_layout Enumerate
Establish inverse attitude relationship
\end_layout

\begin_deeper
\begin_layout Enumerate
Demonstrate inverse function (applied to rotor)
\end_layout

\end_deeper
\begin_layout Enumerate
Transform vector expressions (here using the inverse rotor)
\end_layout

\begin_layout Enumerate
Display the various results
\end_layout

\end_deeper
\begin_layout Subsection
Body Attitude
\end_layout

\begin_layout Standard
As a familiar starting point, consider the attitude of a rigid body expressed
 with one of the classic three 
\begin_inset Quotes eld
\end_inset

sequential angle
\begin_inset Quotes erd
\end_inset

 rotations such as Euler angle
\begin_inset CommandInset citation
LatexCommand cite
key "EulerAngles:enwiki:1054152729"

\end_inset

 or Tait-Bryan angle
\begin_inset CommandInset citation
LatexCommand cite
key "TaitBrianAngles:enwiki:393759388"

\end_inset

 conventions.
\end_layout

\begin_layout Standard
Here, consider three rotations about successively distinct axes.
 The body may be rotated as the sequence of turning motions, firt through
 angle, 
\begin_inset Formula $\xi E_{23}$
\end_inset

 (dual to the body 
\begin_inset Quotes eld
\end_inset

x
\begin_inset Quotes erd
\end_inset

 axis), then 
\begin_inset Formula $\psi E_{31}$
\end_inset

 (dual to the body 
\begin_inset Quotes eld
\end_inset

y
\begin_inset Quotes erd
\end_inset

 axis), and then 
\begin_inset Formula $\zeta E_{12}$
\end_inset

 (parallel to the body face plane).
 The rotor representing the resulting net rotation may be expressed as (observin
g right to left accumulation of the individual rotation steps).
\begin_inset Formula 
\[
R=e^{\frac{1}{2}\zeta E_{12}}e^{\frac{1}{2}\psi E_{31}}e^{\frac{1}{2}\xi E_{23}}
\]

\end_inset

The (principal branch expression of the) net angle, 
\begin_inset Formula $A$
\end_inset

, may be extracted from the rotor, 
\begin_inset Formula $R$
\end_inset

, as
\begin_inset Formula 
\[
A=\ln R
\]

\end_inset


\end_layout

\begin_layout Subsection
Transforming Vector Expressions
\end_layout

\begin_layout Standard
Given the attitude of the body expressed by rotor, 
\begin_inset Formula $R$
\end_inset

, it is then a simple matter to transform vector expressions between the
 reference and body frames.
\end_layout

\begin_layout Standard
To compute body frame location, 
\begin_inset Formula $y$
\end_inset

, from reference frame location, 
\begin_inset Formula $x$
\end_inset

, simply apply the canonical forward rotation formula (ref Appendix
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Associated-Geometric-Algebra"

\end_inset

 and equation
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "eq:RotationCanonical"

\end_inset

)
\begin_inset Formula 
\[
y=RxR^{\dagger}
\]

\end_inset


\end_layout

\begin_layout Standard
Transformation of body location vector expressions into the reference frame
 is performed with the inverse expression (obtained from forward relationship
 via left multiplication by 
\begin_inset Formula $R^{\dagger}$
\end_inset

 and right multiplication by 
\begin_inset Formula $R$
\end_inset

 on both sides).
\begin_inset Formula 
\begin{equation}
x=R^{\dagger}yR\label{eq:RotationInverse}
\end{equation}

\end_inset


\end_layout

\begin_layout Section
\start_of_appendix
\begin_inset CommandInset label
LatexCommand label
name "sec:Associated-Geometric-Algebra"

\end_inset

Associated Geometric Algebra Relationships
\end_layout

\begin_layout Standard
This section reviews a number Geometric Algebra considerations and operations
 that are particularly relevant to this demo.
\end_layout

\begin_layout Subsection
Bivector Angles
\end_layout

\begin_layout Standard
The bivector, 
\begin_inset Formula $A$
\end_inset

, can be interpreted as an completely specified angle in 3D space.
 The magnitude, 
\begin_inset Formula $\left|A\right|=\sqrt{AA^{\dagger}}=\sqrt{-A^{2}}$
\end_inset

, specifies the amount of rotation (in radians), and the direction, 
\begin_inset Formula $\hat{A}\equiv\frac{A}{\left|A\right|}$
\end_inset

, specifies the plane of rotation.
\end_layout

\begin_layout Standard
A may be represented in component form, relative to unitary basis-planes,
 
\begin_inset Formula $E_{ij}$
\end_inset

, as
\begin_inset Formula 
\begin{equation}
A=A_{1}E_{23}+A_{2}E_{31}+A_{3}E_{12}\label{eq:AngleComponents}
\end{equation}

\end_inset


\end_layout

\begin_layout Subsection
Rotors
\end_layout

\begin_layout Standard
A unitary rotor, 
\begin_inset Formula $R$
\end_inset

, may be associated with this angle via exponentiation,
\begin_inset Formula 
\[
R=e^{\frac{1}{2}A}=\sqrt{e^{A}}
\]

\end_inset


\end_layout

\begin_layout Standard
The rotor reverse, 
\begin_inset Formula $R^{\dagger}$
\end_inset

, is
\begin_inset Formula 
\[
R^{\dagger}=e^{-\frac{1}{2}A}
\]

\end_inset


\end_layout

\begin_layout Standard
The rotor, 
\begin_inset Formula $R$
\end_inset

, is unitary.
 I.e.
\begin_inset Formula 
\[
RR^{\dagger}=1
\]

\end_inset


\end_layout

\begin_layout Subsection
Canonical Rotation Formula
\end_layout

\begin_layout Standard
Let 
\begin_inset Formula $x$
\end_inset

 be a vector location expressed in a local reference frame.
 Let 
\begin_inset Formula $y$
\end_inset

 be a vector to the same location but expressed in the body frame.
\end_layout

\begin_layout Standard
The relationship between the two expressions is established with the canonical
 rotation formula,
\begin_inset Formula 
\begin{equation}
y=RxR^{\dagger}\label{eq:RotationCanonical}
\end{equation}

\end_inset

Note that this is the 
\begin_inset Quotes eld
\end_inset

passive
\begin_inset Quotes erd
\end_inset

 convention for rotation as described in the interpretation below.
\end_layout

\begin_layout Standard
When rotor, 
\begin_inset Formula $R$
\end_inset

, is associated with bivector angle, 
\begin_inset Formula $A$
\end_inset

, as above, the canoncial rotation formula may also be expressed as
\begin_inset Formula 
\[
y=e^{\frac{1}{2}A}xe^{-\frac{1}{2}A}
\]

\end_inset

or
\begin_inset Formula 
\[
y=\sqrt{e^{A}}x\sqrt{e^{-A}}
\]

\end_inset


\end_layout

\begin_layout Standard
This is pure rotation
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
General rigid body motion comprising translation and rotation is illustrated
 in a separate demo program.
\end_layout

\end_inset

 and the origin remains fixed.
 I.e.
 
\begin_inset Formula $x=0$
\end_inset

 transforms to 
\begin_inset Formula $y=0$
\end_inset

.
\end_layout

\begin_layout Subsubsection
Interpretation
\end_layout

\begin_layout Standard
There are two conventions with which to conceptualize turning motion.
 Often these are called the 
\begin_inset Quotes eld
\end_inset

active
\begin_inset Quotes erd
\end_inset

 and the 
\begin_inset Quotes eld
\end_inset

passive
\begin_inset Quotes erd
\end_inset

 convention.
 The active convention is interpreted as 
\begin_inset Quotes eld
\end_inset

changing the vector
\begin_inset Quotes erd
\end_inset

 while the passive convention is interpreted as 
\begin_inset Quotes eld
\end_inset

changing the coordinate frame
\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Standard
For example consider a mechanical clock with a minute hand that is 15 minutes
 slow.
 There are two ways to correct the time.
 In the first possibility, hold the clock steady, and rotate the hand by
 one quarter of a turn clockwise (CW).
 In the second possibility, hold the hand in place, and rotate the clock
 face underneath it by one quarter turn counter-clockwise (CCW).
 When considering 
\emph on
only
\emph default
 the hand relative to the face, the end result is the same in either case
 (e.g.
 think of performing this operation while floating in a dark room in outer
 space where there are no other references).
\end_layout

\begin_layout Standard
Which interpretation to assign a rotation operation, active or passive,
 is entirely a matter of convention.
 The most important thing is to be consistent.
\end_layout

\begin_layout Standard
For the passive interpretation, the rotation operation, 
\begin_inset Formula $y=RxR^{\dagger}$
\end_inset

 with 
\begin_inset Formula $R=e^{A}$
\end_inset

, is interpreted as the coordinate frame turning through positive angle,
 
\begin_inset Formula $A$
\end_inset

.
 In the example above, 
\begin_inset Formula $x$
\end_inset

 would be the hand on the clock in its initial position expressed with respect
 to a reference frame in which the hand is stationary.
 The face is turned through positive angle 
\begin_inset Formula $A$
\end_inset

 underneath it (the coordinate frame of the face undergoes rotation).
 After the rotation operation, the location of the hand in the clock frame
 is expressed as 
\begin_inset Formula $y$
\end_inset

.
\end_layout

\begin_layout Standard
The passive interpretation is generally very useful when physical bodies
 are involved in an application, and it's natural to associate coordinate
 systems to each body.
 E.g.
 in engineering, bodies may represent beams, slabs, aircraft frames, entire
 planets, gears, survey instruments, AR head gear, etc, etc.
\end_layout

\begin_layout Subsection
Composition of Rotors
\end_layout

\begin_layout Standard
If two rotations are performed sequentially, one after the other, the resulting
 attitude may be represented equivalently as if produced by a single rotation
 operation (cf.
 Euler's Theorem
\begin_inset CommandInset citation
LatexCommand cite
key "EulersTheorem:enwiki:1050406121"

\end_inset

 of rigid body motion).
\end_layout

\begin_layout Standard
If 
\begin_inset Formula $R_{a}$
\end_inset

 and 
\begin_inset Formula $R_{b}$
\end_inset

 are two rotors, each representing a particular rotation operation, then
 the combined (net) rotation result is represented mathematically as the
 
\emph on
order-specific
\emph default
 product of these two rotors.
\end_layout

\begin_layout Standard
E.g.
 if a body is rotated first through 
\begin_inset Formula $R_{a}=e^{A}$
\end_inset

, and then subsequently through, 
\begin_inset Formula $R_{b}=e^{B}$
\end_inset

, the final attitude of the body is the same as if rotated through a single
 net rotation, 
\begin_inset Formula $R_{c}$
\end_inset

.
 In such a case, the net rotation is represented by the product (recalling
 that rotation steps accumulate from right to left),
\begin_inset Formula 
\[
R_{c}=R_{b}R_{a}=e^{B}e^{A}
\]

\end_inset


\end_layout

\begin_layout Standard
Note that the 
\emph on
order of rotations is important and is not commutative
\emph default
.
 I.e.
\begin_inset Formula 
\[
R_{c}^{\prime}=R_{a}R_{b}\ne R_{b}R_{a}=R_{c}
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset bibtex
LatexCommand bibtex
bibfiles "BibTexReferences"
options "plain"

\end_inset


\end_layout

\end_body
\end_document
